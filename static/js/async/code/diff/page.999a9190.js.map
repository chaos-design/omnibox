{"version":3,"file":"static/js/async/code/diff/page.999a9190.js","sources":["webpack://omnibox/./src/components/editor/index.module.scss","webpack://omnibox/./src/components/editor/index.tsx","webpack://omnibox/./src/routes/code/diff/index.module.scss","webpack://omnibox/./src/routes/code/diff/page.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport default {\"editorContainer\":\"editorContainer-RWw_iD\"};","import React, {\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport c from 'classnames';\n\nimport { omit } from 'lodash';\n\nimport MonacoEditor, {\n  useMonaco,\n  DiffEditor as MonacoDiffEditor,\n  EditorProps as OriginEditorProps,\n} from '@monaco-editor/react';\nimport { useMonacoEditor } from '../../shared/config/editor';\n\nimport s from './index.module.scss';\n\nexport { useMonaco };\n\ntype NotUndefined<T> = T extends undefined ? never : T;\ntype OnChangeType = NotUndefined<OriginEditorProps['onChange']>;\ntype OnMountType = NotUndefined<OriginEditorProps['onMount']>;\n\nexport type EventType = Parameters<OnChangeType>[1];\nexport type EditorType = Parameters<OnMountType>[0];\n\nexport type MonacoEditorProps = Parameters<typeof MonacoEditor>[0];\n\nexport interface EditorProps extends MonacoEditorProps {\n  className?: string;\n  language?: string;\n  ref?: React.RefObject<unknown>;\n}\n\nconst Editor = React.forwardRef(\n  ({ className, ...monacoEditorProps }: EditorProps, ref) => {\n    const [value, setValue] = useState();\n    const editorRef = useRef<any>(null);\n    const { setEditor } = useMonacoEditor();\n\n    useLayoutEffect(() => {\n      if (editorRef.current) {\n        setEditor?.(editorRef.current);\n      }\n    }, [editorRef.current, setEditor]);\n\n    const handleEditorChange = useCallback(\n      (_v: string | undefined) => {\n        let v = value;\n        if (!_v) {\n          v = value;\n        } else {\n          try {\n            v = JSON.parse(_v);\n          } catch (error) {\n            v = value;\n          }\n        }\n\n        setValue(v);\n      },\n      [],\n    );\n\n    const getLanguage = React.useCallback(() => {\n      if (editorRef.current) {\n        // @ts-ignore\n        return editorRef.current?.getModel().getLanguageId();\n      }\n\n      return 'json';\n    }, []);\n\n    const handleFormatDocument = React.useCallback(() => {\n      if (editorRef.current) {\n        // @ts-ignore\n        editorRef.current?.getAction?.('editor.action.formatDocument').run();\n      }\n    }, [editorRef.current]);\n\n    useImperativeHandle(ref, () => {\n      return {\n        getValue: () => value,\n        setValue: (v: any) => setValue(v),\n        handleFormatDocument,\n        getLanguage,\n        editor: editorRef.current,\n      };\n    }, [editorRef.current]);\n\n    const handleEditorDidMount = React.useCallback((editor: EditorType) => {\n      // @ts-ignore\n      editorRef.current = editor;\n\n      // @ts-ignore\n      editor.handleFormatDocument = handleFormatDocument;\n      // @ts-ignore\n      editor.getLanguage = getLanguage;\n\n      // @ts-ignore\n      setEditor(editor);\n\n      // 监听 paste 事件\n      editor.onDidPaste(() => {\n        handleFormatDocument();\n      });\n    }, []);\n\n    const editorValue = React.useMemo(() => {\n      try {\n        return JSON.stringify(value, null, 2);\n      } catch (error) {\n        return `${value}`;\n      }\n    }, [value]);\n\n    return (\n      <div className={c(s.editorContainer, className)}>\n        <MonacoEditor\n          height=\"100%\"\n          defaultLanguage={monacoEditorProps?.defaultLanguage ?? 'json'}\n          defaultValue={editorValue}\n          theme={monacoEditorProps?.theme ?? 'vs-dark'}\n          {...omit(monacoEditorProps || {}, 'defaultLanguage', 'theme')}\n          // @ts-ignore\n          onMount={handleEditorDidMount}\n          onChange={handleEditorChange}\n        />\n      </div>\n    );\n  },\n);\n\nexport type MonacoDiffEditorProps = Parameters<typeof MonacoDiffEditor>[0];\n\nexport interface DiffEditorProps extends MonacoDiffEditorProps {\n  className?: string;\n  format?: boolean;\n}\n\nconst DiffEditor = ({\n  className,\n  language = 'json',\n  ...monacoEditorProps\n}: DiffEditorProps) => {\n  const diffEditorRef = useRef<any>(null);\n\n  const handleEditorDidMount = React.useCallback((editor: EditorType) => {\n    diffEditorRef.current = editor;\n    // console.log(editor);\n\n    // 监听 onDidUpdateDiff 事件\n    // editor.onDidUpdateDiff((e, ...args) => {\n    //   console.log(e, ...args)\n    //   handleFormatDocument(e);\n    // });\n  }, []);\n\n  return (\n    <div className={c(s.editorContainer, className)}>\n      <MonacoDiffEditor\n        theme={monacoEditorProps?.theme || 'vs-dark'}\n        height=\"calc(100%)\"\n        language={language}\n        original=\"\"\n        modified=\"\"\n        options={{\n          originalEditable: true,\n          formatOnPaste: true,\n          // renderSideBySide: false,\n        }}\n        // @ts-ignore\n        onMount={handleEditorDidMount}\n      />\n    </div>\n  );\n};\n\nexport { Editor, DiffEditor };\n","// extracted by css-extract-rspack-plugin\nexport default {\"pageContainer\":\"pageContainer-WGvo0Y\"};","'use client';\n\nimport React, { useRef, useState } from 'react';\n\nimport { DiffEditor } from '../../../components/editor';\n\nimport s from './index.module.scss';\n\nexport default function Page() {\n  return (\n    <div className={s.pageContainer}>\n      <DiffEditor />\n    </div>\n  );\n}\n"],"names":["Editor","React","ref","className","monacoEditorProps","value","setValue","useState","editorRef","useRef","setEditor","useMonacoEditor","useLayoutEffect","handleEditorChange","useCallback","_v","v","JSON","error","getLanguage","_editorRef_current","handleFormatDocument","useImperativeHandle","handleEditorDidMount","editor","editorValue","Page","DiffEditor"],"mappings":"sQACA,MAAkC,yBCqClC,IAAMA,EAASC,EAAAA,UAAgB,CAC7B,CAAC,EAAkDC,K,QAAlD,CAAEC,UAAAA,CAAS,CAAqC,GAAhCC,EAAAA,AAAAA,CAAAA,EAAAA,EAAAA,CAAAA,AAAAA,EAAAA,EAAAA,CAAdD,Y,EACK,CAACE,EAAOC,EAAS,CAAGC,AAAAA,CAAAA,EAAAA,EAAAA,QAAAA,AAAAA,IACpBC,EAAYC,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,EAAY,MACxB,CAAEC,UAAAA,CAAS,CAAE,CAAGC,AAAAA,CAAAA,EAAAA,EAAAA,CAAAA,AAAAA,IAEtBC,AAAAA,CAAAA,EAAAA,EAAAA,eAAAA,AAAAA,EAAgB,KACVJ,EAAU,OAAO,EACnBE,CAAAA,MAAAA,GAAAA,EAAYF,EAAU,OAAO,EAEjC,EAAG,CAACA,EAAU,OAAO,CAAEE,EAAU,EAEjC,IAAMG,EAAqBC,AAAAA,CAAAA,EAAAA,EAAAA,WAAAA,AAAAA,EACzB,AAACC,IACC,IAAIC,EAAIX,EACR,GAAKU,EAGH,GAAI,CACFC,EAAIC,KAAK,KAAK,CAACF,EACjB,CAAE,MAAOG,EAAO,CACdF,EAAIX,CACN,MANAW,EAAIX,EASNC,EAASU,EACX,EACA,EAAE,EAGEG,EAAclB,EAAAA,WAAiB,CAAC,KACpC,GAAIO,EAAU,OAAO,CAAE,C,IAEdY,EAAP,OAAO,AAAiB,OAAjBA,CAAAA,EAAAA,EAAU,OAAO,AAAD,GAAhBA,AAAAA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmB,QAAQ,GAAG,aAAa,EACpD,CAEA,MAAO,MACT,EAAG,EAAE,EAECC,EAAuBpB,EAAAA,WAAiB,CAAC,KAC7C,GAAIO,EAAU,OAAO,CAAE,C,IAErBY,EAAAA,C,AAAiB,QAAjBA,CAAAA,EAAAA,EAAU,OAAO,AAAD,GAAhBA,AAAAA,KAAAA,IAAAA,GAAAA,AAA4B,OAA5BA,CAAAA,EAAAA,EAAmB,SAAS,AAAD,GAA3BA,AAAAA,KAAAA,IAAAA,GAAAA,EAAAA,IAAAA,CAAAA,EAA+B,gCAAgC,GAAG,EACpE,CACF,EAAG,CAACZ,EAAU,OAAO,CAAC,EAEtBc,AAAAA,CAAAA,EAAAA,EAAAA,mBAAAA,AAAAA,EAAoBpB,EAAK,IAChB,EACL,SAAU,IAAMG,EAChB,SAAU,AAACW,GAAWV,EAASU,GAC/BK,qBAAAA,EACAF,YAAAA,EACA,OAAQX,EAAU,OAAO,AAC3B,GACC,CAACA,EAAU,OAAO,CAAC,EAEtB,IAAMe,EAAuBtB,EAAAA,WAAiB,CAAC,AAACuB,IAE9ChB,EAAU,OAAO,CAAGgB,EAGpBA,EAAO,oBAAoB,CAAGH,EAE9BG,EAAO,WAAW,CAAGL,EAGrBT,EAAUc,GAGVA,EAAO,UAAU,CAAC,KAChBH,GACF,EACF,EAAG,EAAE,EAECI,EAAcxB,EAAAA,OAAa,CAAC,KAChC,GAAI,CACF,OAAOgB,KAAK,SAAS,CAACZ,EAAO,KAAM,EACrC,CAAE,MAAOa,EAAO,CACd,MAAO,Y,myBCnHf,MAAgC,uBCOjB,SAASQ,IACtB,MACE,UAAC,OAAI,SAAS,G,SACZ,UAACC,EAAAA,EAAUA,CAAAA,CAAAA,E,EAGjB,C"}