{"version":3,"file":"static/js/async/json/stringify-parse/page.51adc75f.js","sources":["webpack://omnibox/./src/components/editor/index.module.scss","webpack://omnibox/./src/components/editor/index.tsx","webpack://omnibox/./src/routes/json/stringify-parse/page.tsx","webpack://omnibox/./src/shared/tools/json.ts","webpack://omnibox/./src/shared/tools/copy.ts","webpack://omnibox/./src/shared/storage/tools.ts","webpack://omnibox/./src/shared/constant.ts","webpack://omnibox/./src/shared/storage/json.ts","webpack://omnibox/./src/routes/json/stringify-parse/index.module.scss"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport default {\"editorContainer\":\"editorContainer-RWw_iD\"};","import React, {\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport c from 'classnames';\n\nimport { omit } from 'lodash';\n\nimport MonacoEditor, {\n  useMonaco,\n  DiffEditor as MonacoDiffEditor,\n  EditorProps as OriginEditorProps,\n} from '@monaco-editor/react';\nimport { useMonacoEditor } from '../../shared/config/editor';\n\nimport s from './index.module.scss';\n\nexport { useMonaco };\n\ntype NotUndefined<T> = T extends undefined ? never : T;\ntype OnChangeType = NotUndefined<OriginEditorProps['onChange']>;\ntype OnMountType = NotUndefined<OriginEditorProps['onMount']>;\n\nexport type EventType = Parameters<OnChangeType>[1];\nexport type EditorType = Parameters<OnMountType>[0];\n\nexport type MonacoEditorProps = Parameters<typeof MonacoEditor>[0];\n\nexport interface EditorProps extends MonacoEditorProps {\n  className?: string;\n  language?: string;\n  ref?: React.RefObject<unknown>;\n}\n\nconst Editor = React.forwardRef(\n  ({ className, ...monacoEditorProps }: EditorProps, ref) => {\n    const [value, setValue] = useState();\n    const editorRef = useRef<any>(null);\n    const { setEditor } = useMonacoEditor();\n\n    useLayoutEffect(() => {\n      if (editorRef.current) {\n        setEditor?.(editorRef.current);\n      }\n    }, [editorRef.current, setEditor]);\n\n    const handleEditorChange = useCallback(\n      (_v: string | undefined) => {\n        let v = value;\n        if (!_v) {\n          v = value;\n        } else {\n          try {\n            v = JSON.parse(_v);\n          } catch (error) {\n            v = value;\n          }\n        }\n\n        setValue(v);\n      },\n      [],\n    );\n\n    const getLanguage = React.useCallback(() => {\n      if (editorRef.current) {\n        // @ts-ignore\n        return editorRef.current?.getModel().getLanguageId();\n      }\n\n      return 'json';\n    }, []);\n\n    const handleFormatDocument = React.useCallback(() => {\n      if (editorRef.current) {\n        // @ts-ignore\n        editorRef.current?.getAction?.('editor.action.formatDocument').run();\n      }\n    }, [editorRef.current]);\n\n    useImperativeHandle(ref, () => {\n      return {\n        getValue: () => value,\n        setValue: (v: any) => setValue(v),\n        handleFormatDocument,\n        getLanguage,\n        editor: editorRef.current,\n      };\n    }, [editorRef.current]);\n\n    const handleEditorDidMount = React.useCallback((editor: EditorType) => {\n      // @ts-ignore\n      editorRef.current = editor;\n\n      // @ts-ignore\n      editor.handleFormatDocument = handleFormatDocument;\n      // @ts-ignore\n      editor.getLanguage = getLanguage;\n\n      // @ts-ignore\n      setEditor(editor);\n\n      // 监听 paste 事件\n      editor.onDidPaste(() => {\n        handleFormatDocument();\n      });\n    }, []);\n\n    const editorValue = React.useMemo(() => {\n      try {\n        return JSON.stringify(value, null, 2);\n      } catch (error) {\n        return `${value}`;\n      }\n    }, [value]);\n\n    return (\n      <div className={c(s.editorContainer, className)}>\n        <MonacoEditor\n          height=\"100%\"\n          defaultLanguage={monacoEditorProps?.defaultLanguage ?? 'json'}\n          defaultValue={editorValue}\n          theme={monacoEditorProps?.theme ?? 'vs-dark'}\n          {...omit(monacoEditorProps || {}, 'defaultLanguage', 'theme')}\n          // @ts-ignore\n          onMount={handleEditorDidMount}\n          onChange={handleEditorChange}\n        />\n      </div>\n    );\n  },\n);\n\nexport type MonacoDiffEditorProps = Parameters<typeof MonacoDiffEditor>[0];\n\nexport interface DiffEditorProps extends MonacoDiffEditorProps {\n  className?: string;\n  format?: boolean;\n}\n\nconst DiffEditor = ({\n  className,\n  language = 'json',\n  ...monacoEditorProps\n}: DiffEditorProps) => {\n  const diffEditorRef = useRef<any>(null);\n\n  const handleEditorDidMount = React.useCallback((editor: EditorType) => {\n    diffEditorRef.current = editor;\n    // console.log(editor);\n\n    // 监听 onDidUpdateDiff 事件\n    // editor.onDidUpdateDiff((e, ...args) => {\n    //   console.log(e, ...args)\n    //   handleFormatDocument(e);\n    // });\n  }, []);\n\n  return (\n    <div className={c(s.editorContainer, className)}>\n      <MonacoDiffEditor\n        theme={monacoEditorProps?.theme || 'vs-dark'}\n        height=\"calc(100%)\"\n        language={language}\n        original=\"\"\n        modified=\"\"\n        options={{\n          originalEditable: true,\n          formatOnPaste: true,\n          // renderSideBySide: false,\n        }}\n        // @ts-ignore\n        onMount={handleEditorDidMount}\n      />\n    </div>\n  );\n};\n\nexport { Editor, DiffEditor };\n","'use client';\n\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { Editor } from '../../../components/editor';\n\nimport { Space, Button, ButtonProps } from 'antd';\n\nimport { useMonacoEditor } from '../../../shared/config/editor';\nimport * as json from '../../../shared/tools/json';\nimport { copyToClipboard } from '../../../shared/tools/copy';\nimport { storageStringifyParseValue } from '../../../shared/storage/json';\n\nimport s from './index.module.scss';\n\nconst demoText = `{\n  \"name\": \"John Doe\",\n  \"text\": \"Line1\\\\nLine2\\\\tTabbed\",\n  \"info\": {\n    \"age\": 30,\n    \"active\": true,\n    \"description\": \"他说：“你好，世界！”\"\n  }\n}`;\n\nenum OperateType {\n  'format' = 0,\n  'compressAndEscape',\n  'compress',\n  'escape',\n  'unescape',\n  'unicodeToChinese',\n  'chineseToUnicode',\n  'chinesePunctuationToEnglish',\n  'copy',\n  'demo',\n}\n\nexport default function Page() {\n  const { editor } = useMonacoEditor();\n  // console.log('editorRef', editorRef.current, editor);\n  const cache = storageStringifyParseValue()\n\n  useEffect(() => {\n    const value = editor?.getValue();\n\n    if (value) {\n      cache.setItem(value);\n    } else {\n      const localValue = cache.getItem();\n\n      if (localValue) {\n        editor?.setValue(localValue);\n      } else {\n        editor?.setValue(demoText);\n      }\n    }\n  }, [editor]);\n\n  const handleOperate = useCallback(\n    (type: OperateType) => {\n      const value = editor?.getValue();\n\n      switch (type) {\n        case OperateType.format:\n          editor.handleFormatDocument();\n          break;\n        case OperateType.compressAndEscape:\n          if (value) {\n            editor.setValue(json.compressAndEscapeJSON(value));\n          }\n          break;\n        case OperateType.compress:\n          if (value) {\n            editor.setValue(json.compressJSON(value));\n          }\n          break;\n        case OperateType.escape:\n          if (value) {\n            editor.setValue(json.escapeJSON(value));\n          }\n          break;\n        case OperateType.unescape:\n          if (value) {\n            editor.handleFormatDocument();\n            editor.setValue(json.unescapeJSON(value));\n          }\n          break;\n        case OperateType.unicodeToChinese:\n          if (value) {\n            editor.setValue(json.unicodeToChinese(value));\n          }\n          break;\n        case OperateType.chineseToUnicode:\n          if (value) {\n            editor.setValue(json.chineseToUnicode(value));\n          }\n          break;\n        case OperateType.chinesePunctuationToEnglish:\n          if (value) {\n            editor.setValue(\n              json.chinesePunctuationToEnglish(\n                value,\n                editor.getLanguage() === 'json',\n              ),\n            );\n          }\n          break;\n        case OperateType.copy:\n          if (value) {\n            copyToClipboard(value);\n          }\n          break;\n        case OperateType.demo:\n          if (editor) {\n            editor.setValue(demoText);\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    [editor],\n  );\n\n  const operateList: {\n    label: string;\n    value: OperateType;\n    props?: ButtonProps;\n  }[] = useMemo(\n    () => [\n      {\n        label: '格式化',\n        value: OperateType.format,\n      },\n      {\n        label: '压缩并转义',\n        value: OperateType.compressAndEscape,\n      },\n      {\n        label: '压缩',\n        value: OperateType.compress,\n      },\n      {\n        label: '转义',\n        value: OperateType.escape,\n      },\n      {\n        label: '去除转义',\n        value: OperateType.unescape,\n      },\n      {\n        label: 'Unicode转中文',\n        value: OperateType.unicodeToChinese,\n      },\n      {\n        label: '中文转Unicode',\n        value: OperateType.chineseToUnicode,\n      },\n      {\n        label: '中文符号转英文符号',\n        value: OperateType.chinesePunctuationToEnglish,\n      },\n      {\n        label: '复制',\n        value: OperateType.copy,\n      },\n      {\n        label: 'Demo',\n        value: OperateType.demo,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <div className={s.pageContainer}>\n      <Space\n        style={{\n          marginRight: 10,\n        }}\n        direction=\"vertical\"\n        align=\"start\"\n        wrap\n        size={10}\n      >\n        {operateList.map((item) => {\n          return (\n            <Button\n              key={item.value}\n              size=\"middle\"\n              type=\"primary\"\n              {...item.props}\n              onClick={(e) => {\n                if (typeof item.props?.onClick === 'function') {\n                  item.props.onClick(e);\n                } else {\n                  handleOperate(item.value);\n                }\n              }}\n            >\n              {item.label}\n            </Button>\n          );\n        })}\n      </Space>\n      <Editor />\n    </div>\n  );\n}\n","/**\n * 对 JSON 内容进行转义处理\n * @param input 待转义的 JSON 内容\n * @returns 转义后的 JSON 内容\n */\nexport function escapeJSON(input: string): string {\n  return input.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');\n}\n\n/**\n * 对转义的 JSON 内容进行去转义处理\n * @param input 待去转义的 JSON 内容\n * @returns 去转义后的 JSON 内容\n */\nexport function unescapeJSON(input: string): string {\n  return input.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\\"/g, '\"');\n}\n\n/**\n * 压缩 JSON 字符串，移除所有的空格和换行符\n * @param input 待压缩的 JSON 字符串\n * @returns 压缩后的 JSON 字符串\n */\nexport function compressJSON(input: string): string {\n  return input.replace(/\\s+/g, '');\n}\n\n/**\n * 压缩并转义 JSON 字符串\n * @param input 待处理的 JSON 字符串\n * @returns 压缩并转义后的 JSON 字符串\n */\nexport function compressAndEscapeJSON(input: string): string {\n  const compressed = compressJSON(input);\n  return escapeJSON(compressed);\n}\n\n/**\n * Unicode 转中文\n * @param input Unicode 字符串\n * @returns 中文字符串\n */\nexport function unicodeToChinese(input: string): string {\n  return input.replace(/\\\\u[\\dA-Fa-f]{4}/g, (match) => {\n    return String.fromCharCode(parseInt(match.replace(/\\\\u/g, ''), 16));\n  });\n}\n\n/**\n * 中文转 Unicode\n * @param input 中文字符串\n * @returns Unicode 字符串\n */\nexport function chineseToUnicode(input: string): string {\n  return input\n    .split('')\n    .map((char) => {\n      const code = char.charCodeAt(0).toString(16).toUpperCase();\n      return '\\\\u' + '0000'.substring(0, 4 - code.length) + code;\n    })\n    .join('');\n}\n\n/**\n * 中文符号转英文符号\n * @param input 中文符号字符串\n * @returns 英文符号字符串\n */\nexport function chinesePunctuationToEnglish(\n  input: string,\n  escape = false,\n): string {\n  const punctuationMap: { [key: string]: string } = {\n    '，': ',',\n    '。': '.',\n    '！': '!',\n    '？': '?',\n    '：': ':',\n    '；': ';',\n    '“': escape ? '\\\\\\\"' : '\"',\n    '”': escape ? '\\\\\\\"' : '\"',\n    '‘': escape ? '\\\\\\'' : \"'\",\n    '’': escape ? '\\\\\\'' : \"'\",\n    '（': escape ? '\\\\\\(' : '(',\n    '）': escape ? '\\\\\\)' : ')',\n    '【': escape ? '\\\\\\[' : '[',\n    '】': escape ? '\\\\\\]' : ']',\n    '—': '-',\n    '…': '...',\n  };\n\n  return input\n    .split('')\n    .map((char) => punctuationMap[char] || char)\n    .join('');\n}\n","import { message } from 'antd';\n\nexport const copyToClipboard = (\n  text: string,\n  feedback = () => message.success('复制成功'),\n) => {\n  const input = document.createElement('input');\n\n  input.setAttribute('readonly', 'readonly');\n  input.setAttribute('value', text);\n  document.body.appendChild(input);\n  input.setSelectionRange(0, 9999);\n  input.select();\n\n  input.setSelectionRange(0, input.value.length);\n  document.execCommand('copy');\n\n  document.body.removeChild(input);\n\n  if (typeof feedback === 'function') {\n    feedback();\n  }\n};\n","import { SLOGAN_NAME } from '../constant';\n\nexport const getStorageKey = (key: string) =>\n  `${SLOGAN_NAME}_${key}`.toUpperCase();\n\nexport const storageTools = (key: string) => {\n  return {\n    getItem() {\n      const value = localStorage.getItem(key);\n      if (value) {\n        return JSON.parse(value);\n      }\n\n      return null;\n    },\n    setItem(value: any) {\n      localStorage.setItem(key, JSON.stringify(value));\n    },\n    removeItem() {\n      localStorage.removeItem(key);\n    },\n    clear() {\n      localStorage.clear();\n    },\n  };\n};\n","export const SLOGAN_NAME = 'omnibox';\n","import { getStorageKey, storageTools } from './tools';\n\nexport const storageStringifyParseValue = () => {\n  return storageTools(getStorageKey('json_stringify_parse'));\n};\n","// extracted by css-extract-rspack-plugin\nexport default {\"pageContainer\":\"pageContainer-yzhSbQ\"};"],"names":["Editor","React","ref","className","monacoEditorProps","value","setValue","useState","editorRef","useRef","setEditor","useMonacoEditor","useLayoutEffect","handleEditorChange","useCallback","_v","v","JSON","error","getLanguage","_editorRef_current","handleFormatDocument","useImperativeHandle","handleEditorDidMount","editor","editorValue","OperateType","escapeJSON","input","compressJSON","copyToClipboard","text","feedback","message","document","getStorageKey","key","storageStringifyParseValue","storageTools","demoText","Page","cache","useEffect","localValue","handleOperate","type","json","match","String","parseInt","char","code","escape","punctuationMap","operateList","useMemo","Space","item","Button","e","_item_props"],"mappings":"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"}